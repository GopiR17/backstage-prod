# This dockerfile is used for local develoment purposes and builds an image for
# the BIH backend package.
# It should be executed within the root of the repo as docker context.
#
# Before building this image... 

# 1. Be sure to have run the following commands in the repo root:
# yarn install
# yarn tsc
# yarn build
#
# 2. Login to Registry One and pull the hardened node image locally.
## Registry One login -- https://registry1.dso.mil/harbor/
### Note: You must be registered and logged in to Registry One in order for the 
### docker pull command to work.

# Once the commands have been run, you can build the image using `yarn build-image`.

# FROM registry1.dso.mil/ironbank/opensource/nodejs/nodejs14:14.17.6

# Can use this image as an unsecured alternative from the IB hardened image 
# if it is unavaiable.
FROM node:14-buster

# Change into app working directory.
WORKDIR /app

# Change to root user for copying app files and adjusting perms for the app user.
USER root

# These three lines are in place to install python3, pip3 and mkdocs so that we can generate
# within the application.  When we get to a point where BIH is just reading, we
# can start to remove this piece and lighten the load on the backend of the application.
# This can be removed and in the case that we are utilizing AWS S3, but if locally you
# are just wanting to use local docs, then this needs to be included.
# RUN apt-get update && apt-get install -y python3
# RUN apt-get update && apt-get install -y python3-pip
# RUN pip3 install --upgrade pip && pip3 install mkdocs-techdocs-core==0.0.16

# Copy repo skeleton first, to avoid unnecessary docker cache invalidation.
# The skeleton contains the package.json of each package in the monorepo,
# and along with yarn.lock and the root package.json, that's enough to run yarn install.
COPY yarn.lock package.json packages/backend/dist/skeleton.tar.gz ./
RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz

RUN yarn config set "strict-ssl" false -g
RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"

# Then copy the rest of the backend bundle, along with other required files.
COPY packages/backend/dist/bundle.tar.gz app-config.yaml github-app-backstage-bih-1-credentials.yaml ./
RUN tar xzf bundle.tar.gz && rm bundle.tar.gz

# Give the node app user read access to app files.
RUN chown -hR node /app

# Change back to the app user.
USER node

# Expose the application port.
EXPOSE 7000

# Run the app at container start.
CMD ["node", "packages/backend", "--config", "app-config.yaml"]