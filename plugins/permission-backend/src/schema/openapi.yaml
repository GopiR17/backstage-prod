openapi: 3.0.3
info:
  title: '@backstage/permission-backend'
  description: Permission schema
  version: 0.0.1
servers:
  - url: /
  - url: permission
paths:
  /authorize:
    post:
      operationId: Authorize
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EvaluatePermissionResponse"
                required:
                  - items
                additionalProperties: false
        "400":
          $ref: '#/components/responses/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAuthorizeRequestBody"
  /health:
    get:
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetHealth200ResponseBody"
components:
  responses:
    ErrorResponse:
      description: An error response from the backend.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            name:
              type: string
            message:
              type: string
            stack:
              type: string
            code:
              type: string
          required:
            - name
            - message
        request:
          type: object
          properties:
            method:
              type: string
            url:
              type: string
          required:
            - method
            - url
        response:
          type: object
          properties:
            statusCode:
              type: number
          required:
            - statusCode
      required:
        - error
        - response
      additionalProperties: {}
    PostAuthorizeRequestBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              permission:
                oneOf:
                  - type: object
                    properties:
                      name:
                        type: string
                      attributes:
                        type: object
                        properties:
                          action:
                            type: string
                            enum:
                              - create
                              - read
                              - update
                              - delete
                        additionalProperties: false
                      type:
                        type: string
                        enum: 
                          - basic
                    required:
                      - name
                      - type
                      - attributes
                    additionalProperties: false
                  - type: object
                    properties:
                      type:
                        type: string
                        enum: 
                          - resource
                      resourceType:
                        type: string
                      name:
                        type: string
                      attributes:
                        type: object
                        properties:
                          action:
                            type: string
                            enum:
                              - create
                              - read
                              - update
                              - delete
                        additionalProperties: false
                    required:
                      - type
                      - name
                      - attributes
                      - resourceType
                    additionalProperties: false
              resourceRef:
                type: string
            required:
              - id
              - permission
            additionalProperties: false
      required:
        - items
    
    PermissionRuleParam:
      oneOf:
        - type: string
        - type: number
        - type: boolean
          nullable: true

    PermissionCondition:
      type: object
      properties:
        resourceType:
          type: string
        rule:
          type: string
        params:
          type: object
          additionalProperties:
            oneOf:
              - $ref: "#/components/schemas/PermissionRuleParam"
              - type: array
                items:
                  $ref: "#/components/schemas/PermissionRuleParam"
      required:
        - resourceType
        - rule
      additionalProperties: true

    DefinitivePolicyDecision:
      type: object
      properties:
        result:
          type: string
          enum:
            - ALLOW
            - DENY
      required:
        - result
      additionalProperties: false

    PermissionCriteria:
      # Restricting this to depth of 1, TS doesn't love recursive
      oneOf:
        - type: object
          properties:
            allOf:
              type: array
              items:
                $ref: "#/components/schemas/PermissionCondition"
              minItems: 1
          additionalProperties: true
        - type: object
          properties:
            anyOf:
              type: array
              items:
                $ref: "#/components/schemas/PermissionCondition"
              minItems: 1
          additionalProperties: true
        - type: object
          properties:
            not:
              type: array
              items:
                $ref: "#/components/schemas/PermissionCondition"
              minItems: 1
          additionalProperties: true
        - $ref: "#/components/schemas/PermissionCondition"
    
    ConditionalPolicyDecision:
      type: object
      properties:
        result:
          type: string
          enum:
            - CONDITIONAL
        pluginId:
          type: string
        resourceType:
          type: string
        conditions:
          $ref: "#/components/schemas/PermissionCriteria"
      required:
        - result
        - pluginId
        - resourceType
        - conditions
      additionalProperties: false
    
    EvaluatePermissionResponse:
      oneOf:
        - $ref: "#/components/schemas/ConditionalPolicyDecision"
        - $ref: "#/components/schemas/DefinitivePolicyDecision"

    PostAuthorize400ResponseBody:
      type: object
      properties:
        error:
          type: object
          properties:
            name:
              type: string
            message:
              type: string
          required:
            - name
            - message
        request:
          type: object
          properties:
            method:
              type: string
            url:
              type: string
          required:
            - method
            - url
        response:
          type: object
          properties:
            statusCode:
              type: number
          required:
            - statusCode
      required:
        - error
        - request
        - response
    GetHealth200ResponseBody:
      type: object
      properties:
        status:
          type: string
      required:
        - status
