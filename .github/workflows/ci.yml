name: CI
on:
  # NOTE: If you change these you must update ci-noop.yml as well
  pull_request:
    paths-ignore:
      - 'microsite/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # This step only runs yarn install to make sure that an exact match is available
  # in the cache. The two following verify and tests jobs then always install from cache.
  install:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x]

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    name: Install ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v3

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.4
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  # # The verify jobs runs all the verification that doesn't require a
  # # diff towards master, since it takes some time to fetch that.
  # verify:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [16.x, 18.x]

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096

  #   name: Verify ${{ matrix.node-version }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: verify yarn dependency duplicates
  #       run: node scripts/verify-lockfile-duplicates.js

  #     - name: verify changesets
  #       run: node scripts/verify-changesets.js

  #     - name: verify local dependency ranges
  #       run: node scripts/verify-local-dependencies.js

  #     - name: check for missing repo fixes
  #       run: yarn fix --check

  #     - name: validate config
  #       run: yarn backstage-cli config:check --lax

  #     - name: type checking and declarations
  #       run: yarn tsc:full

  #     - name: prettier
  #       run: yarn prettier:check

  #       # We need to generate the API references as well, so that we can verify the doc links
  #     - name: check api reports and generate API reference
  #       run: yarn build:api-reports:only --ci --docs

  #     - name: verify api reference
  #       run: node scripts/verify-api-reference.js

  #     - name: verify catalog-info.yaml consistency
  #       run: yarn backstage-repo-tools generate-catalog-info --ci

  #     - name: lint openapi yaml files
  #       run: yarn backstage-repo-tools schema openapi lint

  #     - name: verify openapi yaml file matches generated ts file
  #       run: yarn backstage-repo-tools schema openapi verify

  #     - name: verify doc links
  #       run: node scripts/verify-links.js

  #     - name: build all packages
  #       run: yarn backstage-cli repo build --all

  #     - name: verify type dependencies
  #       run: yarn lint:type-deps

  #     - name: ensure clean working directory
  #       run: |
  #         if files=$(git ls-files --exclude-standard --others --modified) && [[ -z "$files" ]]; then
  #           exit 0
  #         else
  #           echo ""
  #           echo "Working directory has been modified:"
  #           echo ""
  #           git status --short
  #           echo ""
  #           exit 1
  #         fi

  # # The test job runs all tests as well as any verification step that
  # # requires a diff towards master.
  # test1:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 1 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/components\/SearchFilter\/SearchFilter\.Autocomplete\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/OwnershipCard\/OwnershipCard\.test\.tsx" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/DefaultIdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.stable\.test\.tsx" --testPathIgnorePatterns="packages\/cli-node\/src\/monorepo\/Lockfile\.test\.ts" --testPathIgnorePatterns="plugins\/jenkins-backend\/src\/service\/jenkinsInfoProvider\.test\.ts" --testPathIgnorePatterns="packages\/integration\/src\/gerrit\/core\.test\.ts" --testPathIgnorePatterns="plugins\/gocd\/src\/components\/GoCdBuildsInsights\/GoCdBuildInsights\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/components\/MultistepJsonForm\/schema\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.beta\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.stable\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/Stepper\.test\.tsx" --testPathIgnorePatterns="plugins\/search-backend-module-elasticsearch\/src\/engines\/ElasticSearchClientWrapper\.test\.ts" --testPathIgnorePatterns="plugins\/auth-backend\/src\/providers\/bitbucketServer\/provider\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/modules\/core\/AnnotateScmSlugEntityProcessor\.test\.ts" --testPathIgnorePatterns="plugins\/permission-backend\/src\/service\/PermissionIntegrationClient\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/loader\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/gitlab\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/compile\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/DocsSynchronizer\.test\.ts" --testPathIgnorePatterns="plugins\/pagerduty\/src\/components\/EntityPagerDutyCard\/index\.test\.tsx" --testPathIgnorePatterns="plugins\/linguist-backend\/src\/api\/LinguistBackendClient\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/service\/rules\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/AzureUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/tokens\/ServerTokenManager\.test\.ts" --testPathIgnorePatterns="packages\/backend-plugin-manager\/src\/scanner\/plugin-scanner-watcher\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.beta\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/Group\/MembersList\/MembersListCard\.test\.tsx" --testPathIgnorePatterns="plugins\/kubernetes-backend\/src\/cluster-locator\/GkeClusterLocator\.test\.ts" --testPathIgnorePatterns="plugins\/github-deployments\/src\/components\/GithubDeploymentsCard\.test\.tsx"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test2:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 2 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/components\/SearchFilter\/SearchFilter\.Autocomplete\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/OwnershipCard\/OwnershipCard\.test\.tsx" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/DefaultIdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.stable\.test\.tsx" --testPathIgnorePatterns="packages\/cli-node\/src\/monorepo\/Lockfile\.test\.ts" --testPathIgnorePatterns="plugins\/jenkins-backend\/src\/service\/jenkinsInfoProvider\.test\.ts" --testPathIgnorePatterns="packages\/integration\/src\/gerrit\/core\.test\.ts" --testPathIgnorePatterns="plugins\/gocd\/src\/components\/GoCdBuildsInsights\/GoCdBuildInsights\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/components\/MultistepJsonForm\/schema\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.beta\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.stable\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/Stepper\.test\.tsx" --testPathIgnorePatterns="plugins\/search-backend-module-elasticsearch\/src\/engines\/ElasticSearchClientWrapper\.test\.ts" --testPathIgnorePatterns="plugins\/auth-backend\/src\/providers\/bitbucketServer\/provider\.test\.ts" --testPathIgnorePatterns="plugins\/user-settings\/src\/apis\/StorageApi\/UserSettingsStorage\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucketServerPullRequest\.test\.ts" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/IdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/parameters\.test\.ts" --testPathIgnorePatterns="packages\/core-plugin-api\/src\/extensions\/useElementFilter\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/azure\.test\.ts" --testPathIgnorePatterns="packages\/core-components\/src\/components\/AlertDisplay\/AlertDisplay\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/api\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucket\.examples\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/createAsyncValidators\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/context\/SearchContext\.test\.tsx" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/filtering\.test\.ts" --testPathIgnorePatterns="plugins\/newrelic\/src\/api\/index\.test\.ts" --testPathIgnorePatterns="plugins\/pagerduty\/src\/api\/client\.test\.ts" --testPathIgnorePatterns="plugins\/todo-backend\/src\/service\/TodoReaderService\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/processing\/DefaultCatalogProcessingOrchestrator\.test\.ts"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test3:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 3 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/components\/SearchFilter\/SearchFilter\.Autocomplete\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/OwnershipCard\/OwnershipCard\.test\.tsx" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/DefaultIdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.stable\.test\.tsx" --testPathIgnorePatterns="packages\/cli-node\/src\/monorepo\/Lockfile\.test\.ts" --testPathIgnorePatterns="plugins\/jenkins-backend\/src\/service\/jenkinsInfoProvider\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/modules\/core\/AnnotateScmSlugEntityProcessor\.test\.ts" --testPathIgnorePatterns="plugins\/permission-backend\/src\/service\/PermissionIntegrationClient\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/loader\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/gitlab\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/compile\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/DocsSynchronizer\.test\.ts" --testPathIgnorePatterns="plugins\/pagerduty\/src\/components\/EntityPagerDutyCard\/index\.test\.tsx" --testPathIgnorePatterns="plugins\/linguist-backend\/src\/api\/LinguistBackendClient\.test\.ts" --testPathIgnorePatterns="plugins\/user-settings\/src\/apis\/StorageApi\/UserSettingsStorage\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucketServerPullRequest\.test\.ts" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/IdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/parameters\.test\.ts" --testPathIgnorePatterns="packages\/core-plugin-api\/src\/extensions\/useElementFilter\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/azure\.test\.ts" --testPathIgnorePatterns="packages\/core-components\/src\/components\/AlertDisplay\/AlertDisplay\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/api\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-node\/src\/stages\/publish\/helpers\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/createExtensionInstance\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/ingestion\/CatalogRules\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-import\/src\/components\/StepInitAnalyzeUrl\/StepInitAnalyzeUrl\.test\.tsx" --testPathIgnorePatterns="plugins\/catalog-import\/src\/components\/useImportState\.test\.tsx" --testPathIgnorePatterns="packages\/backend-plugin-api\/src\/services\/system\/types\.test\.ts" --testPathIgnorePatterns="packages\/integration\/src\/bitbucket\/core\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/lib\/schema\.test\.ts"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test4:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 4 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/components\/SearchFilter\/SearchFilter\.Autocomplete\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/OwnershipCard\/OwnershipCard\.test\.tsx" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/DefaultIdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/integration\/src\/gerrit\/core\.test\.ts" --testPathIgnorePatterns="plugins\/gocd\/src\/components\/GoCdBuildsInsights\/GoCdBuildInsights\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/components\/MultistepJsonForm\/schema\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.beta\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/modules\/core\/AnnotateScmSlugEntityProcessor\.test\.ts" --testPathIgnorePatterns="plugins\/permission-backend\/src\/service\/PermissionIntegrationClient\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/loader\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/gitlab\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/service\/rules\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/AzureUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/tokens\/ServerTokenManager\.test\.ts" --testPathIgnorePatterns="packages\/backend-plugin-manager\/src\/scanner\/plugin-scanner-watcher\.test\.ts" --testPathIgnorePatterns="plugins\/user-settings\/src\/apis\/StorageApi\/UserSettingsStorage\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucketServerPullRequest\.test\.ts" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/IdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/parameters\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucket\.examples\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/createAsyncValidators\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/context\/SearchContext\.test\.tsx" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/filtering\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-node\/src\/stages\/publish\/helpers\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/createExtensionInstance\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/ingestion\/CatalogRules\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-import\/src\/components\/StepInitAnalyzeUrl\/StepInitAnalyzeUrl\.test\.tsx" --testPathIgnorePatterns="plugins\/catalog-react\/src\/components\/UserListPicker\/UserListPicker\.test\.tsx" --testPathIgnorePatterns="plugins\/github-issues\/src\/api\/githubIssuesApi\.test\.ts" --testPathIgnorePatterns="packages\/backend-tasks\/src\/tasks\/PluginTaskSchedulerImpl\.test\.ts" --testPathIgnorePatterns="packages\/backend-app-api\/src\/alpha\/featureDiscoveryServiceFactory\.test\.ts"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test5:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 5 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/components\/SearchFilter\/SearchFilter\.Autocomplete\.test\.tsx" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.stable\.test\.tsx" --testPathIgnorePatterns="packages\/integration\/src\/gerrit\/core\.test\.ts" --testPathIgnorePatterns="plugins\/gocd\/src\/components\/GoCdBuildsInsights\/GoCdBuildInsights\.test\.tsx" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.stable\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/Stepper\.test\.tsx" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/modules\/core\/AnnotateScmSlugEntityProcessor\.test\.ts" --testPathIgnorePatterns="plugins\/permission-backend\/src\/service\/PermissionIntegrationClient\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/compile\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/DocsSynchronizer\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/service\/rules\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/AzureUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.beta\.test\.tsx" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/Group\/MembersList\/MembersListCard\.test\.tsx" --testPathIgnorePatterns="plugins\/user-settings\/src\/apis\/StorageApi\/UserSettingsStorage\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucketServerPullRequest\.test\.ts" --testPathIgnorePatterns="packages\/core-plugin-api\/src\/extensions\/useElementFilter\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/azure\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucket\.examples\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder-react\/src\/next\/components\/Stepper\/createAsyncValidators\.test\.ts" --testPathIgnorePatterns="plugins\/newrelic\/src\/api\/index\.test\.ts" --testPathIgnorePatterns="plugins\/pagerduty\/src\/api\/client\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-node\/src\/stages\/publish\/helpers\.test\.ts" --testPathIgnorePatterns="packages\/frontend-app-api\/src\/wiring\/createExtensionInstance\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-import\/src\/components\/useImportState\.test\.tsx" --testPathIgnorePatterns="packages\/backend-plugin-api\/src\/services\/system\/types\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-react\/src\/components\/UserListPicker\/UserListPicker\.test\.tsx" --testPathIgnorePatterns="plugins\/github-issues\/src\/api\/githubIssuesApi\.test\.ts" --testPathIgnorePatterns="packages\/core-components\/src\/components\/LogViewer\/LogLine\.test\.tsx" --testPathIgnorePatterns="packages\/core-components\/src\/layout\/ProxiedSignInPage\/ProxiedSignInIdentity\.test\.ts"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test6:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x]

  #   name: Test 6 ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="plugins\/techdocs-backend\/src\/service\/router\.test\.ts" --testPathIgnorePatterns="plugins\/org\/src\/components\/Cards\/OwnershipCard\/OwnershipCard\.test\.tsx" --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/cli-node\/src\/monorepo\/Lockfile\.test\.ts" --testPathIgnorePatterns="packages\/integration\/src\/gerrit\/core\.test\.ts" --testPathIgnorePatterns="plugins\/scaffolder\/src\/components\/MultistepJsonForm\/schema\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RouteResolver\.stable\.test\.ts" --testPathIgnorePatterns="plugins\/search-backend-module-elasticsearch\/src\/engines\/ElasticSearchClientWrapper\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/modules\/core\/AnnotateScmSlugEntityProcessor\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/loader\.test\.ts" --testPathIgnorePatterns="packages\/config-loader\/src\/schema\/compile\.test\.ts" --testPathIgnorePatterns="plugins\/pagerduty\/src\/components\/EntityPagerDutyCard\/index\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/service\/rules\.test\.ts" --testPathIgnorePatterns="packages\/backend-common\/src\/tokens\/ServerTokenManager\.test\.ts" --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.beta\.test\.tsx" --testPathIgnorePatterns="plugins\/kubernetes-backend\/src\/cluster-locator\/GkeClusterLocator\.test\.ts" --testPathIgnorePatterns="plugins\/user-settings\/src\/apis\/StorageApi\/UserSettingsStorage\.test\.ts" --testPathIgnorePatterns="plugins\/auth-node\/src\/identity\/IdentityClient\.test\.ts" --testPathIgnorePatterns="packages\/core-plugin-api\/src\/extensions\/useElementFilter\.test\.tsx" --testPathIgnorePatterns="packages\/core-components\/src\/components\/AlertDisplay\/AlertDisplay\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder-backend\/src\/scaffolder\/actions\/builtin\/publish\/bitbucket\.examples\.test\.ts" --testPathIgnorePatterns="plugins\/search-react\/src\/context\/SearchContext\.test\.tsx" --testPathIgnorePatterns="plugins\/newrelic\/src\/api\/index\.test\.ts" --testPathIgnorePatterns="plugins\/todo-backend\/src\/service\/TodoReaderService\.test\.ts" --testPathIgnorePatterns="plugins\/techdocs-node\/src\/stages\/publish\/helpers\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-backend\/src\/ingestion\/CatalogRules\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-import\/src\/components\/useImportState\.test\.tsx" --testPathIgnorePatterns="packages\/integration\/src\/bitbucket\/core\.test\.ts" --testPathIgnorePatterns="plugins\/catalog-react\/src\/components\/UserListPicker\/UserListPicker\.test\.tsx" --testPathIgnorePatterns="packages\/backend-tasks\/src\/tasks\/PluginTaskSchedulerImpl\.test\.ts" --testPathIgnorePatterns="packages\/core-components\/src\/components\/LogViewer\/LogLine\.test\.tsx" --testPathIgnorePatterns="plugins\/scaffolder\/src\/components\/TemplatePage\/TemplatePage\.test\.tsx"
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  # test-with:
  #   runs-on: ubuntu-latest

  #   needs: install

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       node-version: [18.x, 18.x, 18.x, 18.x, 18.x, 18.x]

  #   name: Test with ${{ matrix.node-version }}
  #   services:
  #     postgres13:
  #       image: postgres:13
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     postgres9:
  #       image: postgres:9
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432/tcp
  #     mysql8:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       options: >-
  #         --health-cmd "mysqladmin ping -h localhost"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306/tcp

  #   env:
  #     CI: true
  #     NODE_OPTIONS: --max-old-space-size=4096
  #     INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
  #     INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
  #     INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
  #     INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: fetch branch master
  #       run: git fetch origin master

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/ # Needed for auth

  #     - name: yarn install
  #       uses: backstage/actions/yarn-install@v0.6.4
  #       with:
  #         cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

  #     - name: test changed packages
  #       run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master
  #       env:
  #         DEBUG: 'knex:*'
  #         BACKSTAGE_TEST_DISABLE_DOCKER: 1
  #         BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
  #         BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  test-without1-3:
    runs-on: ubuntu-latest

    needs: install

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 18.x, 18.x, 18.x, 18.x, 18.x]

    name: Test without1-3 ${{ matrix.node-version }}
    services:
      postgres13:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      postgres9:
        image: postgres:9
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      mysql8:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306/tcp

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096
      INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
      INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
      INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
      INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: fetch branch master
        run: git fetch origin master

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.4
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

      - name: test changed packages
        run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="packages\/backend-common\/src\/reading\/GerritUrlReader\.test\.ts" --testPathIgnorePatterns="packages\/cli-node\/src\/monorepo\/Lockfile\.test\.ts"
        env:
          DEBUG: 'knex:*'
          BACKSTAGE_TEST_DISABLE_DOCKER: 1
          BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
          BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
          BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored

  test-without2-4:
    runs-on: ubuntu-latest

    needs: install

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 18.x, 18.x, 18.x, 18.x, 18.x]

    name: Test without2-4 ${{ matrix.node-version }}
    services:
      postgres13:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      postgres9:
        image: postgres:9
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      mysql8:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306/tcp

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096
      INTEGRATION_TEST_GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITHUB_TOKEN }}
      INTEGRATION_TEST_GITLAB_TOKEN: ${{ secrets.INTEGRATION_TEST_GITLAB_TOKEN }}
      INTEGRATION_TEST_BITBUCKET_TOKEN: ${{ secrets.INTEGRATION_TEST_BITBUCKET_TOKEN }}
      INTEGRATION_TEST_AZURE_TOKEN: ${{ secrets.INTEGRATION_TEST_AZURE_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: fetch branch master
        run: git fetch origin master

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth

      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.4
        with:
          cache-prefix: ${{ runner.os }}-v${{ matrix.node-version }}

      - name: test changed packages
        run: yarn backstage-cli repo test --maxWorkers=2 --workerIdleMemoryLimit=1300M --since origin/master --testPathIgnorePatterns="packages\/core-app-api\/src\/routing\/RoutingProvider\.stable\.test\.tsx" --testPathIgnorePatterns="plugins\/jenkins-backend\/src\/service\/jenkinsInfoProvider\.test\.ts"
        env:
          DEBUG: 'knex:*'
          BACKSTAGE_TEST_DISABLE_DOCKER: 1
          BACKSTAGE_TEST_DATABASE_POSTGRES13_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres13.ports[5432] }}
          BACKSTAGE_TEST_DATABASE_POSTGRES9_CONNECTION_STRING: postgresql://postgres:postgres@localhost:${{ job.services.postgres9.ports[5432] }}
          BACKSTAGE_TEST_DATABASE_MYSQL8_CONNECTION_STRING: mysql://root:root@localhost:${{ job.services.mysql8.ports[3306] }}/ignored
